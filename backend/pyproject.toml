[tool.poetry]
name = "pylint-src"
version = "0.1.0"
description = ""
authors = ["Konrad Zagozda <zagozdakonrad@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
django = "^4.2.1"
djangorestframework = "^3.14.0"
psycopg2 = "^2.9.6"
drf-spectacular = "^0.26.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pytest-django = "^4.5.2"
pytest-cov = "^4.0.0"

[tool.coverage.run]
omit = [
    "src/config/**",
    "src/manage.py",
    "**/admin.py",
    "**/apps.py",
    "**/migrations/**",
    "**/__init__.py",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["test_*.py", "*_test.py", "tests.py"]
addopts = "--cov=src --cov-report html --cov-report term"


[tool.poetry.group.dev.dependencies]
pylint = "^2.17.4"
pylint-django = "^2.5.3"
black = "^23.3.0"
isort = "^5.12.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pylint.main]
max-line-length = 95
init-hook = "import sys; sys.path.append('./src')"
load-plugins = "pylint_django"
django-settings-module = "config.settings"

[tool.pylint.MESSAGE_CONTROL]
disable = [
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
    "C0116", # missing-function-docstring
]

[tool.black]
line-length = 95

[tool.isort]
line_length = 95
profile = "black"
